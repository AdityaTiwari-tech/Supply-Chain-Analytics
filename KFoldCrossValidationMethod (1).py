# -*- coding: utf-8 -*-
"""ForecastingDemandwithLightGBM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15LHjVFFug8-P_KUSDZkG36jPiYomxNv7
"""

import pandas as pd
from google.colab import files
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold
from sklearn.metrics import mean_squared_error

uploaded = files.upload()

data = pd.read_csv("supply_chain_data.csv")

data.head()

target_column ="Number of products sold"
features = ['Price','Availability','Stock levels','Lead times','Order quantities']

num_folds = 5

kf = KFold(n_splits=num_folds, shuffle=True, random_state=42)

mse_scores = []

X_train, X_test, y_train, y_test = train_test_split(data[features], data[target_column], test_size=0.2, random_state=42)

for train_idex, test_index in kf.split(data):
  train_data = data.loc[train_idex,features]
  train_target = data.loc[train_idex,target_column]
  test_data = data.loc[test_index,features]
  test_target = data.loc[test_index,target_column]

train_data = lgb.Dataset(X_train, label=y_train)

params = {
    'objective': 'regression',
    'boosting_type': 'gbdt',
    'metric': 'mse',
    'num_leaves': 31,
    'learning_rate':0.05,
    'feature_fraction': 0.9
}

num_round = 100
bst = lgb.train(params,train_data,num_round)

y_pred = bst.predict(X_test, num_iteration=bst.best_iteration)

print("Forecasted Customer Demand:", y_pred)

mse = mean_squared_error(test_target,y_pred)
mse_scores.append(mse)

average_mse = sum(mse_scores)/num_folds

print("Average MSE:")
print(average_mse)